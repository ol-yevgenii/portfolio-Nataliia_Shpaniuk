import { Context } from '../../@types/context';
import { ExecutionResult } from './vm';
/** creates a <script> element with code */
export declare const createVirtualDomScriptElement: (document: Document, scriptCode: string, attributes?: {
    [name: string]: string;
} | undefined) => HTMLScriptElement;
/**
 * inserts as first child of the root element (usually <head>) if child nodes are
 * available, else appends to root element
 */
export declare const injectVirtualDomElement: (rootElement: Element, scriptElement: Element) => void;
/** materializes the virtual DOM into a DOM string, ergo "HTML" */
export declare const materializeDOM: (executionResult: ExecutionResult<VDOMNode, any>, context: Context) => Promise<string>;
