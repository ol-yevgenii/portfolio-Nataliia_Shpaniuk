import { ResultLanguageType } from './transpile';
import { Context } from '../../@types/context';
import '../runtime/store';
import '../runtime/i18n';
import '../runtime/components/Script';
import '../runtime/components/Link';
import '../runtime/components/Debug';
import '../runtime/components/Code';
import '../runtime/components/Trans';
import '../runtime/components/Markdown';
import { SSGRuntime } from '../../@types/runtime';
/** Vanil.reloadOnChange implementation to allow dynamic  */
export declare const restartOnFileChange: (filePath: string, context: Context) => void;
/** Vanil.fetchContent() implementation */
export declare const astroFetchContent: (targetPath: string, context: Context) => any[];
/** hoisting of relative <script> imports -> <script>code</script> */
export declare const getScriptHoisted: (path: string, type: ResultLanguageType, attributes: any, context: Context) => string;
/** hoisting of relative <link> imports -> <style> sheets */
export declare const getStyleSheetHoisted: (path: string, type: ResultLanguageType, attributes: any, context: Context) => string;
/** preprocesses props that are passed down to an .astro component on import like
 * import MyVanilComponent from "../components/my.astro" */
export declare const preprocessVanilComponentPropsAndSlots: (props: any, Vanil: Partial<SSGRuntime>) => any;
